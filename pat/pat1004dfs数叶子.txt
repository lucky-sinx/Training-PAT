#include<queue>
#include<vector>
#include<iostream>
#include<cstring>
#include<climits>
#include<cstdio>
#include<string>
#include<map>
using namespace std;
const int MAXN=105;
vector<int> tree[MAXN];
int answer[MAXN];
int maxdep=-1;
void dfs(int index,int depth)
{
    if(tree[index].size()==0){
        answer[depth]++;
        maxdep=max(depth,maxdep);
        return;
    }
    for(int i=0;i<tree[index].size();i++)
        dfs(tree[index][i],depth+1);
}
int main()
{
    int m,n,id,k,c;
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        cin>>id>>k;
        for(int i=0;i<k;i++)
        {
            cin>>c;
            tree[id].push_back(c);
        }
    }
    dfs(1,0);
    cout<<answer[0];
    for(int i=1;i<=maxdep;i++)
        cout<<" "<<answer[i];
    return 0;
}




