#include<bits/stdc++.h>
using namespace std;
const int N=100005;
vector<int> g[N];
int maxdepth=0,num_cnt=0;
void dfs(int root,int depth)
{
    if(g[root].size()==0)
    {
        if(depth==maxdepth)
            num_cnt++;
        else if(depth>maxdepth)
            num_cnt=1,maxdepth=depth;
    }
    else
        for(int i=0;i<g[root].size();i++)
            dfs(g[root][i],depth+1);
}
int main()
{
    int n;double p,r;
    int root=-1;
    cin>>n>>p>>r;
    for(int i=0;i<n;i++)
    {
        int x;cin>>x;
        if(x==-1)root=i;
        else g[x].push_back(i);
    }
    dfs(root,0);
    printf("%.2f %d",p*pow(1+r/100,maxdepth),num_cnt);
}
