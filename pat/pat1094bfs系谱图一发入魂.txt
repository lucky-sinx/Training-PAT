#include<bits/stdc++.h>
#define M 1000000007
using namespace std;
const int N=105;
vector<int> tree[N];
map<int,int> mape;
struct node
{
    int no;int level;
    node(int n,int l):no(n),level(l){}
};
int main()
{
    int n,m;cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        int parent,k,child;
        cin>>parent>>k;
        while(k--)
        {
            cin>>child;
            tree[parent].push_back(child);
        }
    }
//    for(int i=1;i<=n;i++)
//        if(tree[i].size())
//    {
//        cout<<i;
//        for(int j=0;j<tree[i].size();j++)
//            cout<<' '<<tree[i][j];
//        cout<<endl;
//    }
    queue<node> q;
    q.push(node(1,1));
    while(!q.empty())
    {
        node t=q.front();
        q.pop();
        int no=t.no,level=t.level;
        mape[level]++;
        for(int i=0;i<tree[no].size();i++)
            q.push(node(tree[no][i],level+1));
    }
    int maxcnt=0,maxlevel=0;
    for(map<int,int>::iterator it=mape.begin();it!=mape.end();it++)
        if(it->second>maxcnt){
            maxcnt=it->second;
            maxlevel=it->first;
        }
    cout<<maxcnt<<' '<<maxlevel;
}
