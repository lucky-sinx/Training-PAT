#include<bits/stdc++.h>
using namespace std;
struct tree
{
    int left,right;
    tree():left(-1),right(-1){};
};
const int N=15;
tree bitree[N];
bool isroot[N];
bool flag;
void trelevel(int root)
{
    queue<int> q;
    q.push(root);
    while(!q.empty())
    {
        int now=q.front();
        q.pop();
        if(!flag){cout<<' ';}
        else flag=false;
        cout<<now;
        if(bitree[now].right!=-1)q.push(bitree[now].right);
        if(bitree[now].left!=-1)q.push(bitree[now].left);
    }
}
void treinorder(int root)
{
    if(root==-1)
        return;
    treinorder(bitree[root].right);
    if(!flag){cout<<' ';}
    else flag=false;
    cout<<root;
    treinorder(bitree[root].left);
}
int main()
{
    int n;cin>>n;
    char l,r;
    memset(isroot,1,sizeof(isroot));
    for(int i=0;i<n;i++)
    {
        cin>>l>>r;
        if(l!='-')bitree[i].left=l-'0',isroot[l-'0']=false;
        if(r!='-')bitree[i].right=r-'0',isroot[r-'0']=false;
    }
//    for(int i=0;i<n;i++)cout<<bitree[i].left<<' '<<bitree[i].right<<endl;
    int root=-1;
    for(int i=0;i<n;i++)if(isroot[i])root=i;
//    cout<<root<<endl;
    flag=true;
    trelevel(root);
    cout<<endl;
    flag=true;
    treinorder(root);
    cout<<endl;
}
