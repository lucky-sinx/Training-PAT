#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <unordered_map>
using namespace std;
unordered_map<int, bool> arr;
struct node
{
    int a,b;
};
bool cmp(node x,node y)
{
    return x.a!=y.a?x.a<y.a:x.b<y.b;
}
int main()
{
    int n,m,k;
    cin>>n>>m;
    vector<int> v[10000];
    for(int i=0;i<m;i++)
    {
        string a,b;
        cin>>a>>b;
        if(a.size()==b.size())//同性
        {
            v[abs(stoi(a))].push_back(abs(stoi(b)));
            v[abs(stoi(b))].push_back(abs(stoi(a)));
        }
        arr[abs(stoi(a)) * 10000 + abs(stoi(b))] = arr[abs(stoi(b)) * 10000 + abs(stoi(a))] = true;
    }
    cin>>k;
    while(k--)
    {
        int c,d;
        cin>>c>>d;
        vector<node> ans;
        for(int i=0;i<v[abs(c)].size();i++)
        {
            for(int j=0;j<v[abs(d)].size();j++)
            {
                if(v[abs(c)][i]==abs(d)||abs(c)==v[abs(d)][j])continue;
                if (arr[v[abs(c)][i] * 10000 + v[abs(d)][j]] == true)
                    ans.push_back(node{v[abs(c)][i], v[abs(d)][j]});
            }
        }
        sort(ans.begin(),ans.end(),cmp);
        cout<<ans.size()<<endl;
        for(int i=0;i<ans.size();i++)
            printf("%04d %04d\n",ans[i].a,ans[i].b);
    }
}
