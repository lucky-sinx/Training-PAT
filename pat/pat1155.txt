#include<bits/stdc++.h>
using namespace std;
const int N=1005;
int n;
int tree[N];
vector<int> path;
void dfs(int root)
{
    path.push_back(root);
    if(root>(n-1)/2)
    {
        for(int i=0;i<path.size();i++)
        {
            if(i!=0)cout<<' ';
            cout<<tree[path[i]];
        }
        cout<<endl;
    }
    else{
        if(2*root+2<n)dfs(2*root+2);
        if(2*root+1<n)dfs(2*root+1);
    }
    path.pop_back();
}
int main()
{
    cin>>n;
    for(int i=0;i<n;i++)
        cin>>tree[i];
    dfs(0);
    bool maxheap=1,minheap=1,notheap=0;
    for(int i=0;i<(n-1)/2;i++)
    {
        if(tree[i]<tree[2*i+1]||(tree[i]<tree[2*i+2]))
            maxheap=0;
        else if(tree[i]>tree[2*i+1]||(tree[i]>tree[2*i+2]))
            minheap=0;
    }
    if((!maxheap&&!minheap))cout<<"Not Heap"<<endl;
    else if(maxheap)cout<<"Max Heap"<<endl;
    else if(minheap)cout<<"Min Heap"<<endl;
}
