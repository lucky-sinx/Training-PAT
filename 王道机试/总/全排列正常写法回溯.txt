#include<iostream>
#include<cstdio>
#include<string>
#include<algorithm>
#include<vector>
using namespace std;

bool visited[30];
void backtrack(vector<string> &res,string s,string t)
{
    if(s.size()==t.size())
    {
        res.push_back(t);
        return;
    }
    for(int i=0;i<s.size();i++)
    {
        if(!visited[i])
        {
            string t1=t+s[i];
            visited[i]=true;
            backtrack(res,s,t1);
            visited[i]=false;
        }
    }
}
int main()
{
    string s;
    while(cin>>s)
    {
        sort(s.begin(),s.end());
        vector<string> res;
        int n=s.size();
        for(int i=0;i<n;i++)
            visited[i]=false;
        string t="";
        backtrack(res, s,t);
        for(int i=0;i<res.size();i++)
            cout<<res[i]<<endl;
    }
}
