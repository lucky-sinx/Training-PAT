#include<vector>
#include<iostream>
#include<climits>
#include<cstring>
#include<queue>
using namespace std;
const int MAXN=200;
vector<int> graph[MAXN];
int inDegree[MAXN];
bool topologicalsort(int n)//节点总数
{
    queue<int> q;
    for(int i=0;i<n;i++)
        if(inDegree[i]==0)q.push(i);
    int cnt=0;
    while(!q.empty())
    {
        int a=q.front();
        q.pop();
        cnt++;
        for(int i=0;i<graph[a].size();i++)
        {
            int v=graph[a][i];
            inDegree[v]--;
            if(inDegree[v]==0)
                q.push(v);
        }
    }
    return n==cnt;
}
int main()
{
    int n,m;
    while(cin>>n>>m)
    {
        if(n==0&&m==0)break;
        int from,to;
        memset(inDegree,0,sizeof(inDegree));
        memset(graph,0,sizeof(graph));
        while(m--)
        {
            cin>>from>>to;
            graph[from].push_back(to);
            inDegree[to]++;
        }
        if(topologicalsort(n))
            cout<<"YES"<<endl;
        else
            cout<<"NO"<<endl;
    }
}





